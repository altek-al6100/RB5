/*
 * File: altek_statefsm.h
 * Description: FSM
 *
 * Copyright 2019-2030  Altek Semiconductor Corporation
 */


/*
 * this file was generated by NunniFSMGen - do not edit!
 */

/*
 * This file is part of al6100.
 *
 * al6100 is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License version 2, as published by
 * the Free Software Foundation.
 *
 * al6100 is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTIBILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License version 2 for
 * more details.
 *
 * You should have received a copy of the General Public License version 2
 * along with al6100. If not, see https://www.gnu.org/licenses/gpl-2.0.html.
 */

#ifndef altek_statefsm_H
#define altek_statefsm_H


#ifdef __cplusplus
extern "C"
{
#endif		/* __cplusplus */


struct altek_statefsm;

struct altek_state {
	int (*ispdrv_open)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_enter_hwpt)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_leave_hwpt)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_coldboot)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_scenario_chg)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_strm_on_off)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_set_qp)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_stop)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_enter_cp)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_leave_cp)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_leave_cp_standy)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_close)(struct altek_statefsm *fsm, void *o);
};


struct altek_statefsm {
	int (*ispdrv_open)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_enter_hwpt)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_leave_hwpt)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_coldboot)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_scenario_chg)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_strm_on_off)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_set_qp)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_stop)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_enter_cp)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_leave_cp)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_leave_cp_standy)(struct altek_statefsm *fsm, void *o);
	int (*ispdrv_close)(struct altek_statefsm *fsm, void *o);
	void (*changestate)(struct altek_statefsm *fsm,
		struct altek_state *nextstate);
	struct altek_state *m_state;
};

extern struct altek_statefsm *altek_statefsmcreate(void);


extern void altek_statefsmdelete(struct altek_statefsm *fsm);

/* events */
extern int altek_statefsmispdrv_open(
	struct altek_statefsm *fsm, void *o);
extern int altek_statefsmispdrv_enter_hwpt(
	struct altek_statefsm *fsm, void *o);
extern int altek_statefsmispdrv_leave_hwpt(
	struct altek_statefsm *fsm, void *o);
extern int altek_statefsmispdrv_write_basic_code(
	struct altek_statefsm *fsm, void *o);
extern int altek_statefsmispdrv_scenario_chg(
	struct altek_statefsm *fsm, void *o);
extern int altek_statefsmispdrv_strm_on_off(
	struct altek_statefsm *fsm, void *o);
extern int altek_statefsmispdrv_set_qp(
	struct altek_statefsm *fsm, void *o);
extern int altek_statefsmispdrv_stop(
	struct altek_statefsm *fsm, void *o);
extern int altek_statefsmispdrv_enter_cp(
	struct altek_statefsm *fsm, void *o);
extern int altek_statefsmispdrv_leave_cp(
	struct altek_statefsm *fsm, void *o);
extern int altek_statefsmispdrv_leave_cp_standy(
	struct altek_statefsm *fsm, void *o);
extern int altek_statefsmispdrv_close(
	struct altek_statefsm *fsm, void *o);


#ifdef __cplusplus
}
#endif		/* __cplusplus */


#endif
